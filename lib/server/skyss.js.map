{"version":3,"sources":["server/skyss.js"],"names":[],"mappings":";;;;;QAkBgB;QAgCA;;;;AAhDhB,SAAS,cAAT,CAAwB,IAAxB,EAA6B;QAClB,IAAO,KAAP,EADkB;QAChB,IAAK,KAAL,EADgB;;AAEzB,QAAM,UAAU,GAAV,CAFmB;AAGzB,QAAM,4DAAmD,YAAO,kBAAa,OAAvE,CAHmB;;AAKzB,WAAO,yBAAa,GAAb,EAAkB,UAAC,MAAD,EAAS,OAAT,EAAqB;;AAE1C,YAAI,QAAQ,EAAR,CAFsC;AAG1C,YAAI,OAAO,MAAP,IAAiB,OAAO,MAAP,CAAc,KAAd,IAAuB,OAAO,MAAP,CAAc,KAAd,CAAoB,MAApB,GAA6B,CAA7B,EAA+B;AACvE,oBAAQ,OAAO,MAAP,CAAc,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAyB,CAAzB,CAD+D;SAA3E;;AAIA,gBAAQ,KAAR,EAP0C;KAArB,CAAzB,CALyB;CAA7B;;AAgBO,SAAS,kCAAT,CAA4C,UAA5C,EAAwD,EAAxD,EAA2D;AAC9D,WAAO,eAAe,UAAf,EAA2B,IAA3B,CAAgC,UAAC,KAAD,EAAW;AAC9C,YAAM,yDAAgD,iBAAY,iBAA5D,CADwC;;AAG9C,eAAO,yBAAa,GAAb,EAAkB,UAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA6B;AAClD,gBAAI;;AAEA,oBAAM,QAAQ,OAAO,MAAP,CAAc,KAAd,CAAoB,CAApB,EAAuB,IAAvB,CAFd;AAGA,oBAAM,OAAO,MAAM,GAAN,CAAU,UAAC,IAAD,EAAU;sCACI,KAAK,CAAL,CAAO,CAAP,EAAU,CAAV,CADJ;wBACrB,kBADqB;wBAClB,oBADkB;wBACd,oBADc;wBACV,kBADU;wBACP,oBADO;wBACH,oBADG;;AAE7B,2BAAO;AACH,8BAAM,KAAK,CAAL;AACN,+BAAO;AACH,kCAAM,CAAN;AACA,gCAAI,EAAJ;AACA,uCAAW,EAAX;AACA,qCAAS,CAAT;AACA,kCAAM,EAAN;AACA,yCAAa,EAAb;yBANJ;qBAFJ,CAF6B;iBAAV,CAAV,CAaV,MAbU,CAaH;2BAAK,EAAE,KAAF,CAAQ,IAAR,IAAgB,OAAhB;iBAAL,CAbJ,CAHN;;AAkBA,wBAAQ,IAAR,EAlBA;aAAJ,CAmBE,OAAO,CAAP,EAAU;AACR,uBAAO,CAAP,EADQ;aAAV;SApBmB,CAAzB,CAH8C;KAAX,CAAvC,CAD8D;CAA3D;;AAgCA,SAAS,cAAT,CAAwB,MAAxB,EAA+B;AAClC,QAAM,6DAAoD,kBAApD,CAD4B;;AAGlC,WAAO,yBAAa,GAAb,EAAkB,UAAC,MAAD,EAAS,OAAT,EAAqB;AAC1C,gBAAQ,OAAO,MAAP,CAAc,CAAd,CAAgB,GAAhB,CAAoB,UAAC,CAAD;mBAAM,EAAE,CAAF,CAAI,CAAJ;SAAN,CAA5B,EAD0C;KAArB,CAAzB;;;AAHkC,CAA/B","file":"server/skyss.js","sourcesContent":["import { baseTravelMagicUrl, getXmlToJson } from './utils';\n\nfunction getNearestStop(from){\n    const {x,y} = from;\n    const maxdist = 250;\n    const url = `${baseTravelMagicUrl}/v1NearestStopsXML?y=${y}&x=${x}&maxdist=${maxdist}`;\n\n    return getXmlToJson(url, (result, resolve) => {\n\n        let value = '';\n        if (result.stages && result.stages.group && result.stages.group.length > 0){\n            value = result.stages.group[0].$.n;\n        }\n\n        resolve(value);\n    });\n}\n\nexport function getNextDeparturesFromGeoToLocation(fromCoords, to){\n    return getNearestStop(fromCoords).then((value) => {\n        const url = `${baseTravelMagicUrl}/v1SearchXML?From=${value}&to=${to}&instant=1`;\n\n        return getXmlToJson(url, (result, resolve, reject) => {\n            try {\n\n                const trips = result.result.trips[0].trip;\n                const deps = trips.map((trip) => {\n                    const { n, n2, nd, l, tn, td } = trip.i[0].$;\n                    return {\n                        trip: trip.$,\n                        first: {\n                            from: n,\n                            to: n2,\n                            line_name: nd,\n                            line_no: l,\n                            kind: tn,\n                            travel_time: td\n                        }\n                    };\n                }).filter(d => d.first.kind != 'Gange');\n\n                resolve(deps);\n            } catch (e) {\n                reject(e);\n            }\n        });\n    });\n}\n\n\nexport function getSuggestions(filter){\n    const url = `${baseTravelMagicUrl}/v2LocationXML?filter=${filter}&type=1`;\n\n    return getXmlToJson(url, (result, resolve) => {\n        resolve(result.stages.i.map((i)=> i.$.n));\n    });\n\n    //http://reiseplanlegger.skyss.no/scripts/travelmagic/TravelMagicWE.dll//v2LocationXML?filter=Danmarks plass&type=1\n}\n"],"sourceRoot":"/source/"}