{"version":3,"sources":["server/parser.js"],"names":[],"mappings":";;;;;QAEgB;;;;;;;;AAAT,SAAS,SAAT,CAAmB,IAAnB,EAAwB;AAC3B,QAAM,UAAU,MAAV,CADqB;AAE3B,QAAM,aAAa,gCAAb,CAFqB;AAG3B,QAAM,aAAa,wBAAb,CAHqB;AAI3B,QAAM,aAAa,kBAAb,CAJqB;;AAM3B,QAAI,QAAQ,CAAR,CANuB;AAO3B,QAAI,WAAW,KAAX,CAPuB;;AAS3B,QAAI,SAAS,EAAT;;;AATuB,QAYrB,SAAS,IAAI,qBAAW,MAAX,CAAkB;AACjC,mBAAW,mBAAC,IAAD,EAAO,OAAP,EAAmB;;;;;;;;;;;;;;;;;;AAkB1B,gBAAI,SAAS,OAAT,EAAiB;AACjB,2BAAW,KAAX,CADiB;AAEjB,wBAAQ,QAAQ,OAAR,CAAR;AACI,yBAAK,UAAL;AACI,gCAAQ,CAAR,CADJ;AAEI,8BAFJ;AADJ,yBAIS,UAAL;AACI,gCAAQ,KAAC,KAAU,CAAV,GAAe,CAAhB,GAAoB,CAApB,CADZ;AAEI,8BAFJ;AAJJ,yBAOS,UAAL;AACI,4BAAI,UAAU,CAAV,EAAY;AACZ,uCAAW,IAAX,CADY;AAEZ,oCAAQ,CAAR,CAFY;yBAAhB;AAIA,8BALJ;AAPJ;AAcQ,8BADJ;AAbJ,iBAFiB;aAArB;SAlBO;AAsCX,gBAAQ,gBAAC,IAAD,EAAU;AACd,gBAAI,QAAJ,EAAa;AACT,2BAAW,CAAC,QAAD,CADF;AAET,uBAAO,IAAP,CAAY,IAAZ,EAFS;aAAb;SADI;KAvCG,CAAT,CAZqB;AA0D3B,WAAO,KAAP,CAAa,IAAb,EA1D2B;AA2D3B,WAAO,GAAP,GA3D2B;;AA6D3B,WAAO,MAAP,CA7D2B;CAAxB","file":"server/parser.js","sourcesContent":["import htmlparser from 'htmlparser2';\n\nexport function parseData(data){\n    const tagName = 'span';\n    const attrValue1 = 'tm-inline-block tm-result-time';\n    const attrValue2 = 'tm-result-time-wrapper';\n    const attrValue3 = 'tm-result-fratil';\n\n    let depth = 0;\n    let getValue = false;\n\n    let result = [];\n\n    //    if (name === 'h2' && attr['class'] === 'tm-alpha tm-reiseforslag-header'){\n    const parser = new htmlparser.Parser({\n        onopentag: (name, attribs) => {\n\n/*\nh2 class=\"tm-alpha tm-reiseforslag-header\"\n    dato\n\nspan class=tm-inline-block tm-result-time\n    span class=tm-result-time-wrapper\n        span class=tm-result-fratil\n            start tid\n        span class=tm-result-fratil\n            slutt tid\n        span class=\"tm-result-info-val\"\n            duration\n        span class=\"tm-tripmenu-linenr\"\n            linjeNo\n*/\n\n            if (name === tagName){\n                getValue = false;\n                switch (attribs['class']) {\n                    case attrValue1:\n                        depth = 1;\n                        break;\n                    case attrValue2:\n                        depth = (depth === 1) ? 2 : 0;\n                        break;\n                    case attrValue3:\n                        if (depth === 2){\n                            getValue = true;\n                            depth = 0;\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        },\n        ontext: (text) => {\n            if (getValue){\n                getValue = !getValue;\n                result.push(text);\n            }\n        }\n    });\n    parser.write(data);\n    parser.end();\n\n    return result;\n}\n"],"sourceRoot":"/source/"}