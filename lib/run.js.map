{"version":3,"sources":["run.js"],"names":[],"mappings":";;;;;;;;;;AAEA,IAAI,MAAM,wBAAN;;AAEJ,IAAM,OAAO,IAAP;;AAEN,IAAM,MAAM,SAAN,GAAM,CAAC,GAAD,EAAS;AACjB,YAAQ,GAAR,CAAe,IAAI,IAAJ,YAAe,GAA9B,EADiB;CAAT;;AAIZ,IAAM,UAAU,SAAV,OAAU,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,EAAiB;AAC7B,QAAM,OAAO,IAAI,KAAJ,CAAU,IAAV,CADgB;AAE7B,QAAM,KAAK,IAAI,KAAJ,CAAU,EAAV,CAFkB;;AAI7B,kBAAY,gBAAW,EAAvB,EAJ6B;;AAM7B,QAAI,CAAC,oBAAa,cAAb,CAA4B,IAA5B,CAAD,EAAmC;AACnC,YAAM,gCAA8B,uBAA9B,CAD6B;AAEnC,YAAI,GAAJ,EAFmC;AAGnC,YAAI,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAAoB,GAApB,EAHmC;AAInC,eAJmC;KAAvC;AAMA,QAAI,CAAC,oBAAa,cAAb,CAA4B,EAA5B,CAAD,EAAiC;AACjC,YAAM,gCAA8B,iBAA9B,CAD2B;AAEjC,YAAI,GAAJ,EAFiC;AAGjC,YAAI,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAAoB,GAApB,EAHiC;AAIjC,eAJiC;KAArC;;AAOA,OAAG,EAAC,MAAM,oBAAa,IAAb,CAAN,EAA0B,IAAI,oBAAa,EAAb,CAAJ,EAA9B,EAAqD,IAArD,CAA0D,UAAC,IAAD,EAAU;AAChE,0BAAgB,KAAK,SAAL,CAAe,IAAf,CAAhB,EADgE;AAEhE,YAAI,IAAJ,CAAS,IAAT,EAFgE;KAAV,CAA1D,CAGG,KAHH,CAGS,UAAC,CAAD,EAAO;AACZ,0BAAgB,KAAK,SAAL,CAAe,CAAf,CAAhB,EADY;AAEZ,YAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,CAArB,EAFY;KAAP,CAHT,CAnB6B;CAAjB;;AA4BhB,IAAI,GAAJ,CAAQ,GAAR,EAAa,UAAC,GAAD,EAAM,GAAN,EAAc;AACvB,QAAI,0BAAJ,EADuB;AAEvB,QAAI,IAAJ,CAAS;AACL,cAAM,EAAE,UAAU,2CAAV,EAAuD,aAAa,gFAAb,EAA/D;AACA,oBAAY,EAAE,UAAU,iDAAV,EAA6D,aAAa,4FAAb,EAA3E;AACA,sBAAc,EAAE,UAAU,aAAV,EAAyB,aAAa,wBAAb,EAAzC;KAHJ,EAFuB;CAAd,CAAb;;AASA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,UAAC,GAAD,EAAM,GAAN,EAAc;AAC3B,YAAQ,GAAR,EAAa,GAAb,2BAD2B;CAAd,CAAjB;;AAIA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,UAAC,GAAD,EAAM,GAAN,EAAc;AACjC,YAAQ,GAAR,EAAa,GAAb,wBADiC;CAAd,CAAvB;;AAIA,IAAI,GAAJ,CAAQ,eAAR,EAAyB,UAAC,GAAD,EAAM,GAAN,EAAc;AACnC,QAAI,sBAAJ,EADmC;AAEnC,QAAI,IAAJ,CAAS,OAAO,IAAP,qBAAT,EAFmC;CAAd,CAAzB;;AAKA,IAAI,MAAJ,CAAW,IAAX;AACA,QAAQ,GAAR,wBAAiC,IAAjC","file":"run.js","sourcesContent":["import { getDepartures, getNextDeparture, HOLDEPLASSER } from './index';\r\nimport express from 'express';\r\nvar app = express();\r\n\r\nconst port = 8181;\r\n\r\nconst log = (msg) => {\r\n    console.log(`${new Date()}: ${msg}`);\r\n};\r\n\r\nconst doQuery = (req, res, fn) =>{\r\n    const from = req.query.from;\r\n    const to = req.query.to;\r\n\r\n    log(`req: ${from} -> ${to}`);\r\n\r\n    if (!HOLDEPLASSER.hasOwnProperty(from)){\r\n        const msg = `res: 404 destination ${from} not not found`;\r\n        log(msg);\r\n        res.status(404).end(msg);\r\n        return;\r\n    }\r\n    if (!HOLDEPLASSER.hasOwnProperty(to)){\r\n        const msg = `res: 404 destination ${to} not found`;\r\n        log(msg);\r\n        res.status(404).end(msg);\r\n        return;\r\n    }\r\n\r\n    fn({from: HOLDEPLASSER[from], to: HOLDEPLASSER[to]}).then((data) => {\r\n        log(`res: 200 ${JSON.stringify(data)}`);\r\n        res.json(data);\r\n    }).catch((e) => {\r\n        log(`res: 500 ${JSON.stringify(e)}`);\r\n        res.status(500).json(e);\r\n    });\r\n};\r\n\r\napp.get('/', (req, res) => {\r\n    log('service document fetched');\r\n    res.json({\r\n        next: { endpoint: '/next?from=<destination>&to=<destination>', description: 'get when the next departure from and to the given quey parameters will depart.'},\r\n        departures: { endpoint: '/departures?from=<destination>&to=<destination>', description: 'get when the next 10 (or so) departures from and to the given quey parameters will depart.'},\r\n        destinations: { endpoint: '/departures', description: 'the valid destinations'}\r\n    });\r\n});\r\n\r\napp.get('/next', (req, res) => {\r\n    doQuery(req, res, getNextDeparture);\r\n});\r\n\r\napp.get('/departures', (req, res) => {\r\n    doQuery(req, res, getDepartures);\r\n});\r\n\r\napp.get('/destinations', (req, res) => {\r\n    log('destinations fetched');\r\n    res.json(Object.keys(HOLDEPLASSER));\r\n});\r\n\r\napp.listen(port);\r\nconsole.log(`listening to port ${port}`);\r\n"],"sourceRoot":"/source/"}